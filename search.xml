<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>L4 LIDARS IP</title>
      <link href="/2020/05/12/L4-LIDARS-IP/"/>
      <url>/2020/05/12/L4-LIDARS-IP/</url>
      
        <content type="html"><![CDATA[<table><thead><tr><th></th><th>LIDAR</th><th>IP</th><th>MSOP Port</th><th>DIFOP Port</th></tr></thead><tbody><tr><td>LIDAR1</td><td>VLP16_front</td><td>192.168.1.201</td><td>3201</td><td>8308</td></tr><tr><td>LIDAR2</td><td>VLP16_rear_right</td><td>192.168.1.202</td><td>2372</td><td>8312</td></tr><tr><td>LIDAR3</td><td>VLP16_rear_left</td><td>192.168.1.203</td><td>3203</td><td>8303</td></tr><tr><td>LIDAR4</td><td>rs_lidar_middle</td><td>192.168.1.204</td><td>6694</td><td>7784</td></tr><tr><td>LIDAR5</td><td>rs_lidar_left</td><td>192.168.1.205</td><td>6695</td><td>7785</td></tr><tr><td>LIDAR6</td><td>rs_lidar_right</td><td>192.168.1.206</td><td>6696</td><td>7786</td></tr></tbody></table>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>欧式聚类点云分割</title>
      <link href="/2020/05/11/%E6%AC%A7%E5%BC%8F%E8%81%9A%E7%B1%BB%E7%82%B9%E4%BA%91%E5%88%86%E5%89%B2/"/>
      <url>/2020/05/11/%E6%AC%A7%E5%BC%8F%E8%81%9A%E7%B1%BB%E7%82%B9%E4%BA%91%E5%88%86%E5%89%B2/</url>
      
        <content type="html"><![CDATA[<figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//为提取点云时使用的搜素对象利用输入点云cloud_filtered创建Kd树对象tree。</span></span><br><span class="line">pcl::search::<span class="function">KdTree::Ptr <span class="title">tree</span> <span class="params">(<span class="keyword">new</span> pcl::search::KdTree)</span></span>;</span><br><span class="line">tree-&gt;setInputCloud (cloud_filtered);</span><br></pre></td></tr></table></figure><p>首先创建一个Kd树对象作为提取点云时所用的搜索方法，再创建一个点云索引向量cluster_indices，存储实际的点云索引信息，用来保存每一个聚类结果的点云索引。请注意： cluster_indices是一个向量，对每个检测到的聚类，它都包含一个索引点的实例，如cluster_indices[0]包含点云中第一个聚类点集的索引。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建一个点云索引向量cluster_indices</span></span><br><span class="line"><span class="built_in">std</span>::<span class="built_in">vector</span>&lt;pcl::PointIndices&gt; cluster_indices;</span><br><span class="line">pcl::EuclideanClusterExtraction ec;</span><br><span class="line">ec.setClusterTolerance (<span class="number">0.02</span>); <span class="comment">//设置近邻搜索的搜索半径为2cm</span></span><br><span class="line">ec.setMinClusterSize (<span class="number">100</span>);<span class="comment">//设置一个聚类需要的最少点数目为100</span></span><br><span class="line">ec.setMaxClusterSize (<span class="number">25000</span>); <span class="comment">//设置一个聚类需要的最大点数目为25000</span></span><br><span class="line">ec.setSearchMethod (tree);<span class="comment">//设置点云的搜索机制</span></span><br><span class="line">ec.setInputCloud (cloud_filtered);</span><br><span class="line">ec.extract (cluster_indices);<span class="comment">//从点云中提取聚类，并将点云索引保存在cluster_indices中</span></span><br></pre></td></tr></table></figure><p>为了从点云索引向量中分割出每个聚类，需要迭代访问点云索引，每次创建一个新的点云数据集，并且将所有当前聚类的点写入到点云数据集中</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//迭代访问点云索引cluster_indices，直到分割出所有聚类</span></span><br><span class="line"><span class="keyword">for</span> (<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;pcl::PointIndices&gt;::const_iterator it = cluster_indices.<span class="built_in">begin</span> (); it != cluster_indices.<span class="built_in">end</span> (); ++it)</span><br><span class="line">&#123;</span><br><span class="line">    pcl::PointCloud&lt;pcl::PointXYZ&gt;::<span class="function">Ptr <span class="title">cloud_cluster</span> <span class="params">(<span class="keyword">new</span> pcl::PointCloud&lt;pcl::PointXYZ&gt;)</span></span>;</span><br><span class="line">    <span class="comment">//创建新的点云数据集cloud_cluster，将所有当前聚类写入到点云数据集中</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">std</span>::<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::const_iterator pit = it-&gt;indices.<span class="built_in">begin</span> (); pit != it-&gt;indices.<span class="built_in">end</span> (); ++pit)</span><br><span class="line">    &#123;</span><br><span class="line">        cloud_cluster-&gt;points.push_back (cloud_filtered-&gt;points[*pit]);</span><br><span class="line">        cloud_cluster-&gt;<span class="built_in">width</span> = cloud_cluster-&gt;points.<span class="built_in">size</span> ();</span><br><span class="line">        cloud_cluster-&gt;<span class="built_in">height</span> = <span class="number">1</span>;</span><br><span class="line">        cloud_cluster-&gt;is_dense = <span class="literal">true</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    pcl::<span class="function">visualization::CloudViewer <span class="title">viewer</span><span class="params">(<span class="string">"Cloud Viewer"</span>)</span></span>;</span><br><span class="line">    viewer.showCloud(cloud_cluster);</span><br><span class="line">    pause();</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">//保存每个cloud_cluster为单独的.pcd文件,一个文件就是一个聚类</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> point clouds </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2020/05/06/hello-world/"/>
      <url>/2020/05/06/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
